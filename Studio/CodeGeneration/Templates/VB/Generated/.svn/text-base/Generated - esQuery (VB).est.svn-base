<% 
/*
=========================================================================
    
    EntitySpaces 2010 
    Persistence Layer and Business Objects for Microsoft .NET 
    Copyright 2005 - 2010 EntitySpaces, LLC 
    EntitySpaces(TM) is a legal trademark of EntitySpaces, LLC 
    http://www.entityspaces.net 

    This template is bound by the EntitySpaces License Agreement which 
    is located here:

    http://www.entityspaces.net/portal/License/tabid/97/Default.aspx
    
=========================================================================
*/%><%@ TemplateInfo 
    UniqueID="CBF2D8F2-4467-44ad-84AE-A50802E57D32" 
    Title="Generated - esQuery (VB)"   
    Description="The Abstract Query Class" 
    Namespace="EntitySpaces.2019.VB.Generated" 
    Author="EntitySpaces, LLC"
    Version="2019.0.0.0"
    IsSubTemplate="True" %><%
//-------------------------------------------------------
// Extract the UI choices that we need
//-------------------------------------------------------	
bool TargetTheCompactFramework = (bool)esMeta.Input["TargetTheCompactFramework"];
string Namespace = (string)esMeta.Input["Namespace"];
bool GenerateSingleFile = (bool)esMeta.Input["GenerateSingleFile"];
bool UseDnnObjectQualifier = (bool)esMeta.Input["UseDnnObjectQualifier"];
bool UseCustomBaseClass = (bool)esMeta.Input["UseCustomBaseClass"];
bool SupportINotifyChanged = (bool)esMeta.Input["SupportINotifyChanged"];
bool GenerateHierarchicalModel = (bool)esMeta.Input["GenerateHierarchicalModel"];

//-------------------------------------------------------
// Create Local Variables
//-------------------------------------------------------	
string comma;

//-------------------------------------------------------
// Begin Execution
//-------------------------------------------------------	
ITable table = (ITable)esMeta.Input["Table"];
IView view = (IView)esMeta.Input["View"];			
IColumns cols = (IColumns)esMeta.Input["Columns"];
esPluginSource source = (esPluginSource)esMeta.Input["Source"];

if(!GenerateSingleFile){ %>'===============================================================================
'                   EntitySpaces Studio by EntitySpaces, LLC
'            Persistence Layer and Business Objects for Microsoft .NET
'            EntitySpaces(TM) is a legal trademark of EntitySpaces, LLC
'                         http://www.entityspaces.net
'===============================================================================
' EntitySpaces Version : <%=esMeta.esPlugIn.esVersion%>
' EntitySpaces Driver  : <%=esMeta.esPlugIn.esDriver%><%if(!esMeta.esPlugIn.TurnOffDateTimeInClassHeaders){%>
' Date Generated       : <%=DateTime.Now.ToString()%><%}%>
'===============================================================================

Imports System
Imports System.Collections.Generic
Imports System.Text
Imports System.Data

Imports EntitySpaces.Core
Imports EntitySpaces.Interfaces
Imports EntitySpaces.DynamicQuery

Namespace <%=Namespace%>
<%}%>
<%if(!TargetTheCompactFramework){%>
	<Serializable> _<%}%>
	MustInherit Public Partial Class <%=source.esQuery%> <%if (UseCustomBaseClass) {%>
		Inherits QueryBase <%}else{%>
		Inherits esDynamicQuery <%}%>
	
		Protected ReadOnly Overrides Property Meta() As IMetadata
			Get
				Return <%=source.Metadata%>.Meta()
			End Get
		End Property
		
#Region "QueryItemFromName"

        Protected Overrides Function QueryItemFromName(ByVal name As String) As esQueryItem
            Select Case name<%foreach(IColumn col in cols){%>
				Case "<%=col.PropertyName%>" 
					Return Me.<%=col.PropertyName%><%}%>
                Case Else
                    Return Nothing
            End Select
        End Function

#End Region		
		
#Region "esQueryItems"

<%		foreach(IColumn col in cols)
		{ 
				%>
		Public ReadOnly Property <%=col.PropertyName%> As esQueryItem
			Get
				Return New esQueryItem(Me, <%=source.Metadata%>.ColumnNames.<%=col.PropertyName%>, <%=col.esSystemType%>)
			End Get
		End Property 
		<%
		} %>
#End Region	
		
	End Class
<%if(!GenerateSingleFile){ %>	
End Namespace<%}%>
<script runat="template">

public string GetFileName()
{
	return esMeta.esPlugIn.esQuery((esPluginSource)esMeta.Input["Source"]) + ".vb";
}

public EntitySpaces.MetadataEngine.Root TheMetaData
{
	get { return esMeta;  }
	set { esMeta = value; }	
}

</script>			