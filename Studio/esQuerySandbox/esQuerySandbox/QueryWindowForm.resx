<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="cSharpSyntaxLanguage1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExecute.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAAd0SU1FB9gEDw0qCPYyVT0AAANaSURBVDhPPZP9T5JRFMeZ/0C/1y9tzN7WZlmr
        9TJrbVim9jZybrqSzARdYFqBvAiiiD7wAIKIWJJZmqjUREkKsUZlLQtWs5orXa+kpW6k1bTi28O1ONuz
        e5/tfj/3fM85l8ViokKhSKD19em00WTVG0wBDWUMU6bGOS1tWdTQDYu1RuucUkuHVVpdoFxZbRWIJeks
        liohpiVhtjS4vT4/Jt59wsfpOXyc/Yn309/x9us8Jqa+4c1kBGOfIxh9N407Iy9ANV3GydJz/XGAqs4Y
        nZlfwNvJGYRef0Dg2Wv4n4zh1uOXGHg0ipsPX6B/mFmZf+/jV+gbfo6cU8IoAbBzl23aVpAE510f5hd+
        Y3J2Dh+mZjH05CU8D0Lo8j2Co9cPQ2sPzii0kFXr0TVwF9zjfPwHhLTjfByQ78WPhSj2SbaDgULXcQX1
        17xQNnXjTF0LBPI6nCiRQmdrQ38giOz84j//AeHGL+XYWLASWkcNdpckwzojIRCxxQSZ+SpEWhuK5BSE
        FRQcrtvwjbxC9omieAZo+abEDttyIiK3h4vBaWeTvcpuQUNHP+rbXKg2t0CuNcHa1oOsvMI4IKx5fxJ7
        2ldirzMRh10bcORGMnIHdiLfyyGQfHUlBDIKPFE51IYmOL33kVNwOm7ByfNwcMybQiBp3auQ5d6CPO9u
        FPrSUDaUTSB8aS34YjXqW13ovRdiLAjiGeTGDpSOcHHoehJSnWzsv7EK6b2ryZfRu4YAbJ0e6C9eg8Z8
        EXTzVcbCvy7EKskr4//ZU7aVHNxuXoFDnvU4OLAOGe4lMY+xwJfVIk8ogaTKgEvXfcgtFC5ZiIVIWoWh
        4afodnuRIkyGYjwHmX1ribjEQOO8sRXCSgOKyqtBO7rQ6r7DzMGpJQuxKJGqo8HxKUxFFsE5txV1X/hE
        rLabYe/sg93pQSOz6i50oELXCBVTSKaNS5NIMhCrgn5mxj9HfjGAbURMd7bD0nkLlXZmkKgW8OW1yBdJ
        UaqiUKG34WB23lgcIFNTbLlGH3R5BhEIjuHe8wl0+5/C2jOIymYXSvUO0gUuUzhOJhe7UjOCmVnH2HFA
        bFNTo0mo0pnTJMoae1GZbFRwVhE5floc5RaIoqlHeZHNKamhtUmbmhPXJDFPmRV/yn8Bhsc5wDY8j+oA
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>209</value>
  </metadata>
</root>